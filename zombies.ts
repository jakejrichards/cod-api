export interface ZombiesOverall {
    brutusesKilled: number;
    kdratio: number;
    ballisticKnivesPickedup: number;
    prisonBrutusKilled: number;
    bouncingbettyDevilPickedup: number;
    meleeKills: number;
    packAPunchPickedup: number;
    accuracy: number;
    bgbTokensUsed: number;
    zrapsKilled: number;
    talismanUsed: number;
    score: number;
    rank: number;
    killedByCatalystWater: number;
    wwGrenadePickedup: number;
    killedByCatalystElectric: number;
    perkDeadshotKills: number;
    zwaspKilled: number;
    paragonRank: number;
    aatCatalystKills: number;
    powerTurnedon: number;
    deaths: number;
    catalystWatersKilled: number;
    wallbuyWeaponsPurchased: number;
    papWeaponGrabbed: number;
    prisonFanTrapUsed: number;
    totalTimesDiveToProne: number;
    towersAcidTrapBuiltOdin: number;
    roundsNoDamage: number;
    grabbedFromPerkRandom: number;
    killedByBrutus: number;
    revives: number;
    bgbsChewed: number;
    codpoints: number;
    lifetimeBuyin: number;
    perkStrongholdHeadshots: number;
    suicides: number;
    rankxp: number;
    zrazKilled: number;
    shieldsPurchased: number;
    powerTurnedoff: number;
    failedSacrifices: number;
    fullAmmoPickedup: number;
    timePlayedTotal: number;
    fireSalePickedup: number;
    rushFirstPlaceFinishes: number;
    lifetimeEarnings: number;
    combinedRank: number;
    doublePapKills: number;
    plevel: number;
    catalystPlasmasKilled: number;
    perkSliderKills: number;
    killedByBlightfather: number;
    misses: number;
    claymoresPickedup: number;
    zdogsKilled: number;
    totalDowns: number;
    heavyKills: number;
    scepterRevives: number;
    plantedBuildablesPickedup: number;
    grabbedFromMagicbox: number;
    playerKills: number;
    sqTransitStarted: number;
    towersAcidTrapBuiltDanu: number;
    killedByCatalyst: number;
    towersAcidTrapBuiltZeus: number;
    prisonTomahawkAcquired: number;
    prisonAcidTrapUsed: number;
    perkMuleKickKills: number;
    hits: number;
    bouncingbettyPickedup: number;
    shieldChargePickedup: number;
    maxedSpecialWeaponKills: number;
    killedByZdog: number;
    catalystCorrosivesKilled: number;
    specialWeaponLevels: number;
    zmarcadeKeyPickedup: number;
    zspidersKilled: number;
    zthrashersKilled: number;
    highestRoundReached: number;
    rounds: number;
    ammoPurchased: number;
    zdogRoundsFinished: number;
    killedByCatalystCorrosive: number;
    weightedRoundsPlayed: number;
    instaKillPickedup: number;
    doorsPurchased: number;
    totalGamesPlayed: number;
    bgbTokensGained: number;
    wlratio: number;
    totalShots: number;
    dungPickedup: number;
    useMagicbox: number;
    perkElectricCherryKills: number;
    totalFallDistanceFeet: number;
    perksDrank: number;
    zdogRoundsLost: number;
    prisonSpinningTrapUsed: number;
    minigunPickedup: number;
    miniBossKills: number;
    weightedDowns: number;
    papWeaponPacked: number;
    killedByCatalystPlasma: number;
    downs: number;
    bonusPointsTeamPickedup: number;
    killedByGladiator: number;
    curWinStreak: number;
    extraLivesPickedup: number;
    totalRoundsSurvived: number;
    tigersKilled: number;
    wonderWeaponKills: number;
    teamkills: number;
    usePap: number;
    headshotPercentage: number;
    roundsNoDowns: number;
    paragonRankxp: number;
    doublePointsPickedup: number;
    grenadeKills: number;
    playerReturns: number;
    nowhereButThereRevives: number;
    kills: number;
    nukePickedup: number;
    buildablesBuilt: number;
    islandSeedPickedup: number;
    bouncingbettyDevilPlanted: number;
    fastTravels: number;
    boards: number;
    failedRevives: number;
    avgLifeTime: number;
    drops: number;
    headshots: number;
    ties: number;
    novaCrawlersKilled: number;
    assists: number;
    killedByTiger: number;
    catalystsKilled: number;
    distanceTraveled: number;
    gladiatorsKilled: number;
    sacrifices: number;
    upgradedAmmoPurchased: number;
    heroWeaponPowerPickedup: number;
    blightfathersKilled: number;
    avgRoundsCompleted: number;
    carpenterPickedup: number;
    bgbPointdropsGained: number;
    catalystTransformationDenials: number;
    claymoresPlanted: number;
    usePerkRandom: number;
    bouncingbettyHollyPlanted: number;
    papWeaponDoublePacked: number;
    catalystElectricsKilled: number;
    zsentinelKilled: number;
    bouncingbettyHollyPickedup: number;
    totalPoints: number;
    bouncingbettyPlanted: number;
}

export interface ZombiesModeStats {
    wins: number;
    kills: number;
    killStreak: number;
    kdratio: number;
    timePlayedTotal: number;
    winStreak: number;
    defends: number;
    offends: number;
    rushFirstPlaceFinishes: number;
    curWinStreak: number;
    losses: number;
    totalGamesPlayed: number;
    totalRoundsSurvived: number;
    score: number;
    crush: number;
    wlratio: number;
    ties: number;
    assists: number;
    totalPoints: number;
    highestRoundReached: number;
    deaths: number;
}

export interface Mode {
    ztcm_towers: ZombiesModeStats;
    ztrials: ZombiesModeStats;
    zclassic: ZombiesModeStats;
    ztutorial: ZombiesModeStats;
    ztcm_escape: ZombiesModeStats;
    ztcm_zod: ZombiesModeStats;
    zstandard: ZombiesModeStats;
    ztcm: ZombiesModeStats;
}

export interface ZombiesMapStats {
    kills: number;
    mostKills: number;
    doorsPurchased: number;
    mostHeadshots: number;
    highestTeamScore: number;
    highestScore: number;
    rushFirstPlaceFinishes: number;
    totalGamesPlayed: number;
    revives: number;
    totalRoundsSurvived: number;
    headshots: number;
    mainQuestCompleted: number;
    highestMultiplier: number;
    fastestTimeToRound20: number;
    fastestTimeToRound10: number;
    totalDowns: number;
    fastestTimeToCompleteRound30: number;
    highestRoundReached: number;
}

export interface ZombiesMap {
    ztcm_towers: ZombiesMapStats;
    ztrials: ZombiesMapStats;
    zclassic: ZombiesMapStats;
    ztutorial: ZombiesMapStats;
    ztcm_escape: ZombiesMapStats;
    ztcm_zod: ZombiesMapStats;
    zstandard: ZombiesMapStats;
    ztcm: ZombiesMapStats;
}


export interface ZombiesMaps {
    zm_escape: ZombiesMap;
    zm_towers: ZombiesMap;
    zm_zodt8: ZombiesMap;
    zm_office: ZombiesMap;
}

export interface Lifetime {
    all: ZombiesOverall;
    mode: Mode;
    map: ZombiesMaps;
}

export interface Mp {
    lifetime: Lifetime;
    level: number;
    maxLevel: number;
    levelXpRemainder: number;
    levelXpGained: number;
    prestige: number;
    prestigeId: number;
    maxPrestige: number;
}

export interface Data {
    title: string;
    platform: string;
    username: string;
    mp: Mp;
    engagement: any;
}

export interface RawZombiesObject {
    status: string;
    data: Data;
}

export interface ZombiesGameSettings {
    zmTalismanPerkModSingle: boolean;
    allowInGameTeamChange: boolean;
    zmElixirSodaFountain: boolean;
    activeCamoSoundsEnabled: boolean;
    disableContracts: boolean;
    zmHeadshotsOnly: boolean;
    cleansedLoadout: boolean;
    forwardSpawnTakesDamage: boolean;
    presetClassesPerTeam: boolean;
    zmPerksSpeed: boolean;
    zmTalismanExtraSemtex: boolean;
    robotShield: boolean;
    rebootPlayers: boolean;
    silentPlant: boolean;
    zmElixirNowhereButThere: boolean;
    zmPowerupNuke: boolean;
    forwardSpawnIsNeutral: boolean;
    headshotsonly: boolean;
    friendlyEquipmentKeylines: boolean;
    killstreaksGiveGameScore: boolean;
    zmElixirBloodDebt: boolean;
    zmPerksSecretSauce: boolean;
    zmTalismanExtraClaymore: boolean;
    disallowprone: boolean;
    zmElixirJoinTheParty: boolean;
    zmElixirsEpic: boolean;
    zmPowerupMaxAmmo: boolean;
    loadoutKillstreaksEnabled: boolean;
    timePausesWhenInZone: boolean;
    disableCAC: boolean;
    flagCaptureRateIncrease: boolean;
    zmTalismanCoagulant: boolean;
    disableManualHealing: boolean;
    zmTalismanBoxGuaranteeLMG: boolean;
    allowAnnouncer: boolean;
    zmWonderWeaponIsEnabled: boolean;
    zmElixirWallPower: boolean;
    zmWeaponsAR: boolean;
    pregameItemVoteEnabled: boolean;
    ekiaResetOnDeath: boolean;
    zmElixirLicensedContractor: boolean;
    zmTalismanBoxGuaranteeBoxOnly: boolean;
    kothMode: boolean;
    disableAttachments: boolean;
    zmPerksDeadshot: boolean;
    voipKillersHearVictim: boolean;
    zmTalismansUltra: boolean;
    zmPowerupDouble: boolean;
    disableClassSelection: boolean;
    zmPerksActive: boolean;
    zmElixirsIndividual: boolean;
    zmElixirAlwaysDoneSwiftly: boolean;
    deployableBarrierCanBeDamaged: boolean;
    zmElixirShieldsUp: boolean;
    zmHeavyAggro: boolean;
    zmPowerupSharing: boolean;
    zmTalismanReducePAPCost: boolean;
    draftHideEnemyTeam: boolean;
    droppedTagRespawn: boolean;
    zmElixirsLegendary: boolean;
    deathPointLoss: boolean;
    zmWeaponsShotgun: boolean;
    zmTalismansEpic: boolean;
    zmElixirNowYouSeeMe: boolean;
    deathCircle: boolean;
    zmElixirCrawlSpace: boolean;
    zmElixirFreeFire: boolean;
    lowImpactBots: boolean;
    zmElixirPointDrops: boolean;
    useItemSpawns: boolean;
    fowRevealEnabled: boolean;
    zmElixirPopShocks: boolean;
    zmElixirPerkaholic: boolean;
    zmPerksPhdSlider: boolean;
    disableAmbientFx: boolean;
    perksEnabled: boolean;
    zmTalismanStartWeaponLMG: boolean;
    zmSpecialRoundsEnabled: boolean;
    zmElixirPhantomReload: boolean;
    allowBattleChatter: boolean;
    zmTrapsEnabled: boolean;
    useDoors: boolean;
    zmShieldIsEnabled: boolean;
    neutralZone: boolean;
    zmWeaponsTR: boolean;
    fogOfWarMinimap: boolean;
    zmTalismanSpecialStartLvl2: boolean;
    zmTalismanSpecialStartLvl3: boolean;
    forwardSpawnEnabled: boolean;
    flagCanBeNeutralized: boolean;
    delayPlayer: boolean;
    zmSuperPaPEnabled: boolean;
    usableDynents: boolean;
    zmElixirAntiEntrapment: boolean;
    zmTalismansRare: boolean;
    teamKillPointLoss: boolean;
    movePlayers: boolean;
    deathZones: boolean;
    zmWallBuysEnabled: boolean;
    playOfTheMatchAllowCinematicCameras: boolean;
    zmPowerupCarpenter: boolean;
    zmPointsFixed: boolean;
    zmTalismanStartWeaponSMG: boolean;
    flagCaptureCondition: boolean;
    zmTalismanPerkStart4: boolean;
    voipDeadChatWithTeam: boolean;
    zmElixirAnywhereButHere: boolean;
    zmTalismanPerkStart1: boolean;
    zmElixirEquipMint: boolean;
    zmTalismanPerkStart3: boolean;
    zmTalismansIndividual: boolean;
    zmTalismanPerkStart2: boolean;
    voipDeadHearAllLiving: boolean;
    disallowaimslowdown: boolean;
    draftEveryRound: boolean;
    hideEnemiesExceptSensorDart: boolean;
    zmEndOnQuest: boolean;
    zmElixirsDurables: boolean;
    zmElixirsRare: boolean;
    classicMode: boolean;
    zmSpecWeaponIsEnabled: boolean;
    zmMysteryBoxIsLimitedRound: boolean;
    vehiclesEnabled: boolean;
    zmCatalystAggro: boolean;
    decayCapturedZones: boolean;
    zmTalismanSpecialXPRate: boolean;
    forwardSpawnProximityActivate: boolean;
    skipLastStand: boolean;
    forwardSpawnTeamSpecificSpawns: boolean;
    pregameDraftEnabled: boolean;
    zmPerksVictorious: boolean;
    zmTalismanPerkPermanent4: boolean;
    idleFlagDecay: boolean;
    zmPerksStaminUp: boolean;
    zmTalismanShieldPrice: boolean;
    disableweapondrop: boolean;
    zmPowerupFireSale: boolean;
    zmTalismanPerkPermanent2: boolean;
    zmTalismanPerkPermanent3: boolean;
    zmPowerupFreePerk: boolean;
    zmTalismanPerkPermanent1: boolean;
    allowSpectating: boolean;
    zmLimitedDownsIsEnabled: boolean;
    zmWeaponsSniper: boolean;
    zmTalismanStartWeaponAR: boolean;
    playerQueuedRespawn: boolean;
    decayProgress: boolean;
    zmWeaponsKnife: boolean;
    scoreResetOnDeath: boolean;
    zmElixirAftertaste: boolean;
    zmElixirImmolationLiquidation: boolean;
    cumulativeRoundScores: boolean;
    zmElixirDangerClosest: boolean;
    voipDeadChatWithDead: boolean;
    zmPerksQuickRevive: boolean;
    zmElixirExtraCredit: boolean;
    zmPerksStoneCold: boolean;
    voipLobbyChatPartyOnly: boolean;
    autoTeamBalance: boolean;
    zmPerksWidowsWail: boolean;
    zmElixirNewtonianNegation: boolean;
    voipDeadHearKiller: boolean;
    zmElixirsEnabled: boolean;
    boastAllowCam: boolean;
    wagermatchhud: boolean;
    allowMapScripting: boolean;
    zmWeaponsSMG: boolean;
    zmTalismanShieldDurabilityRare: boolean;
    zmMysteryBoxIsLimited: boolean;
    zmTalismansCommon: boolean;
    zmElixirTemporalGift: boolean;
    zmElixirSwordFlay: boolean;
    zmElixirPhoenixUp: boolean;
    gameAdvertisementRuleStopAtGameStart: boolean;
    hotPotato: boolean;
    zmPowerupsActive: boolean;
    zmTalismansEnabled: boolean;
    zmEquipmentIsEnabled: boolean;
    zmElixirPowerKeg: boolean;
    capDecay: boolean;
    zmPerksJuggernaut: boolean;
    allowaimslowdown: boolean;
    onlyHeadshots: boolean;
    useEmblemInsteadOfFactionIcon: boolean;
    boastEnabled: boolean;
    scorePerPlayer: boolean;
    zmElixirCacheBack: boolean;
    zmElixirInPlainsight: boolean;
    zmPerksBandolier: boolean;
    vehiclesTimed: boolean;
    allowFinalKillcam: boolean;
    heliUseNavvolumePaths: boolean;
    zmTalismanExtraMolotov: boolean;
    disableThirdPersonSpectating: boolean;
    zmTalismanImpatient: boolean;
    zmWeaponsPistol: boolean;
    zmPowerupSpecialWeapon: boolean;
    multiBomb: boolean;
    magic: boolean;
    zmMainQuestIsEnabled: boolean;
    zmElixirNearDeathExperience: boolean;
    disableCompass: boolean;
    zmElixirUndeadManWalking: boolean;
    zmPerksAllRandom: boolean;
    zmCrawlerAggro: boolean;
    allowprone: boolean;
    playerForceRespawn: boolean;
    enableArmorFeedback: boolean;
    zmElixirHeadScan: boolean;
    zmBarricadeState: boolean;
    escalationEnabled: boolean;
    zmTalismanExtraFrag: boolean;
    playOfTheMatchAllowSkip: boolean;
    zmElixirArsenalAccelerator: boolean;
    zmWeaponsMelee: boolean;
    zmPerksElectricBurst: boolean;
    zmMysteryBoxIsLimitedMove: boolean;
    zmElixirAlchemicalAntithesis: boolean;
    hardcoreMode: boolean;
    zmElixirCtrlZ: boolean;
    zmPowerupChaosPoints: boolean;
    zmElixirWallToWall: boolean;
    pregameAlwaysShowStreakEdit: boolean;
    allowdogs: boolean;
    pregameAlwaysShowCACEdit: boolean;
    voipEveryoneHearsEveryone: boolean;
    zmPerksMuleKick: boolean;
    zmElixirWhosKeepingScore: boolean;
    disableTacInsert: boolean;
    zmStartingWeaponEnabled: boolean;
    zmTalismansLegendary: boolean;
    zmPerksCooldown: boolean;
    deployableBarriersEnabled: boolean;
    draftEnabled: boolean;
    zmTalismanPerkReduceCost4: boolean;
    boastCanCancel: boolean;
    oldschoolMode: boolean;
    voipDeadHearTeamLiving: boolean;
    zmElixirDeadOfNuclearWinter: boolean;
    zmTalismanPerkReduceCost3: boolean;
    zmTalismanPerkReduceCost2: boolean;
    zmPowerupInstakill: boolean;
    zmTalismanPerkReduceCost1: boolean;
    zmElixirsCommon: boolean;
    allowKillcam: boolean;
    zmTalismanShieldDurabilityLegendary: boolean;
    allowPlayOfTheMatch: boolean;
    zmMiniBossAggro: boolean;
    zmPointsLossOnHit: boolean;
    spawnSelectEnabled: boolean;
    zmElixirBurnedOut: boolean;
    zmRetainWeapons: boolean;
    allowCinematicSpectate: boolean;
    useSpawnGroups: boolean;
    zmCraftingKeyline: boolean;
    zmElixirBoardGames: boolean;
    zmPerksDeathPerception: boolean;
    zmElixirStockOption: boolean;
    zmTalismanExtraMiniturret: boolean;
    zmWeaponsLMG: boolean;
    zmPerksDyingWish: boolean;
    zmShowTimer: boolean;
    zmPowerupsIsLimitedRound: boolean;
    zmElixirKillJoy: boolean;
    zmTalismanBoxGuaranteeWonder: boolean;
    playOfTheMatchAllowBotBookmarks: boolean;
    playOfTheMatchIgnoreKillBookmark: boolean;
}

export interface Item {
    name: string;
    label: string;
}

export interface Weapon {
    item: Item;
    camo?: any;
    reticle?: any;
    paintJob?: any;
    attachments?: any;
}

export interface Secondary {
    item?: any;
    camo?: any;
    reticle?: any;
    paintJob?: any;
    attachments?: any;
}

export interface Loadout {
    primary: Weapon;
    secondary: Weapon;
    primaryGrenade: Item;
    heroGadget: Item;
    talisman?: any;
    perks: Item[];
    bbgs: Item[];
}

export interface ZombiesMatch {
    utcStartSeconds: number;
    utcEndSeconds: number;
    map: keyof ZombiesMaps;
    mode: keyof ZombiesMap;
    matchID: string;
    duration: number;
    version: number;
    teamScore: number;
    alliesScore: number;
    playerCount: number;
    numZombieRounds: number;
    roundEnd: number;
    downCount: number;
    difficulty: number;
    playerStats: ZombiesOverall;
    loadout: Loadout;
    partyMembers: string[];
    partyMembersLeft: string[];
    mainQuestCompleted: boolean;
    privateMatch: boolean;
}

export interface MatchesData {
    summary: Record<keyof Mode | 'all', ZombiesOverall>;
    matches: ZombiesMatch[];
}

export interface RawZombiesMatchesObject {
    status: string;
    data: MatchesData;
}